def compute_lambda(t):
    b = 33
    l_0 = 884
    t_0 = 100
    y = b * l_0 /(t-t_0)
    return y
# Открыть файл для чтения, кодировку указывать не обязательно, так как файл содержит только числа:

f = open("lambda_exp.txt", "r")
# Создать пустые списки для значений температур и теплопроводности:
t_list =[]
lambda_exp_list = []
# Последовательно считывать строки из файла, из каждой строки (числа в ней разделены пробелом) сформировать список
# t_lambda_list, состоящий из двух элементов с помощью функции split() (исходная строка '200 264',
# t_lambda_list = ['200',  '264']). Первый элемент списка t_lambda_list добавить к списку температур, второй –
# к списку теплопроводности, преобразовав строковое значение к вещественному.

for line in f:
    t_lambda_list = line.split()
    t_list.append(float(t_lambda_list [0]))
    lambda_exp_list.append(float(t_lambda_list [1]))
# Закрыть файл:

f.close()
# Сформировать список со значениями теплопроводности, посчитанными с помощью функции compute_lambda(t) для температур
# из списка t_list:

lambda_list =[compute_lambda(t) for t in t_list]
# Найти относительную погрешность вычисления теплопроводности для каждого значения температуры. Для этого формула
# вычисления погрешности применяется к соответствующим элементам списков lamda_list и lambda_exp_list. В результате
# создается новый список error_list.

error_list = [abs((lambda_exp_list[i] - lambda_list[i]) / lambda_exp_list[i] ) for i in range(len(t_list))]
# Cформировать таблицу вывода значений температур, экспериментально полученной теплопроводности, рассчитанной по
# формуле теплопроводности и погрешности вычислений..
print("-" * 40)
print("|%7s | %7s | %7s |%8s |" % ("t", "l(t)", "exp(t)", "error"))
print( "-" * 40)

for i in range(len(t_list)):
    print("|%7d | %7.3f | %7.1f |%7.2f%% |" % (t_list[i], lambda_list[i], lambda_exp_list[i], error_list[i] * 100))
print("-" * 40)
# Найти максимальную погрешность, указать какой температуре она соответствует. Для этого :
# - вычислить максимальную погрешность
max_error = max(error_list)
# -       найти температуру, которой эта погрешность соответствует. В Python реализованы различные методы работы со
# списками, в частности метод index(x), который находит первый встретившийся в списке элемент, равный x  и возвращает
# индекс этого элемента. Например, [5,3,6,3].index(3)вернет 1. В нашем случае индекс максимального значения в списке
# погрешностей error_list можно найти с помощью оператора:
index_max_error = error_list.index(max_error)
# - вывести значение максимальной погрешности и соответствующей ей температуры:
print("Максимальная погрешность = %5.2f%%  при t = %5d" % (max_error * 100, t_list[index_max_error]))
# Аналогично вычислить минимальную погрешность:
min_error = min(error_list)
index_min_error = error_list.index(min_error)
print("Минимальная погрешность = %5.2f%%  при t = %5d" % (min_error * 100, t_list[index_min_error]))
# Найти среднюю погрешность:
avg_error = sum(error_list) / len(t_list)
print("Средняя погрешность = %5.2f%%" % (avg_error * 100))
